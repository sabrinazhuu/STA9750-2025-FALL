---
title: "Exploring the Most Popular Programming on Netflix"
subtitle: "STA 9750 Mini-Project #01"
author: "Sabrina Zhu"
date: "`r Sys.Date()`"
---

```{r}
#| label: setup
#| include: false

# Load required packages
if(!require("tidyverse")) install.packages("tidyverse")
library(readr)
library(dplyr)
library(stringr)
library(DT)
library(knitr)
library(lubridate)

# Helper function for formatting tables
format_titles <- function(df) {
  colnames(df) <- str_replace_all(colnames(df), "_", " ") |> str_to_title()
  df
}

#| label: acquire-data
#| include: false
# 1. Aquire Data
if (!dir.exists(file.path("data", "mp01"))) {
  dir.create(file.path("data", "mp01"), showWarnings = FALSE, recursive = TRUE)
}

GLOBAL_TOP_10_FILENAME <- file.path("data", "mp01", "global_top10_alltime.csv")
if (!file.exists(GLOBAL_TOP_10_FILENAME)) {
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv",
    destfile = GLOBAL_TOP_10_FILENAME
  )
}

COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.csv")
if (!file.exists(COUNTRY_TOP_10_FILENAME)) {
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv",
    destfile = COUNTRY_TOP_10_FILENAME
  )
}

#| label: load-clean-data
#| include: false
# 2. Data Import and Preparation
GLOBAL_TOP_10 <- read_tsv(GLOBAL_TOP_10_FILENAME)
GLOBAL_TOP_10 <- GLOBAL_TOP_10 |>
  mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))

COUNTRY_TOP_10 <- read_tsv(COUNTRY_TOP_10_FILENAME)
COUNTRY_TOP_10 <- COUNTRY_TOP_10 |>
  mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))
```

::: {.my-5}

Netflix has become a global stage for stories that connects audiences across cultures. With its investment in original films and series, the platform continues to deliver content that is both high-quality and broadly popular. As a Data Analyst supporting Netflix’s Public Relations team, this project focuses on analyzing Netflix’s Top 10 data to uncover key insights behind the platform’s most successful titles.

::: {.callout-note icon=false style="padding: 16px 20px;"}
## Project Overview
\
**Data Source:** [Netflix’s TuDum Top 10 dataset](https://www.netflix.com/tudum/top10)

**Data Period:** 2020 – October 2025

**Project Structure**

- **Part 1:** Data Preparation — importing, cleaning, and organizing Netflix Top 10 data
- **Part 2:** Exploratory Questions — investigating key trends and insights from the Top 10 data
- **Part 3:** Press Releases — spotlighting Netflix’s biggest hits and milestones
:::

# Data Preparation

## Aquiring Data

This project uses two data files from Netflix’s Top 10 dataset:

- **Global Top 10:** Tracks the most popular films and TV shows on Netflix across all countries.
- **Country-wide Top 10:** Tracks the most popular films and TV shows within each individual country.

```{r}
# 1. Aquire Data
if (!dir.exists(file.path("data", "mp01"))) {
  dir.create(file.path("data", "mp01"), showWarnings = FALSE, recursive = TRUE)
}

GLOBAL_TOP_10_FILENAME <- file.path("data", "mp01", "global_top10_alltime.csv")

if (!file.exists(GLOBAL_TOP_10_FILENAME)) {
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv",
    destfile = GLOBAL_TOP_10_FILENAME
  )
}

COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.csv")

if (!file.exists(COUNTRY_TOP_10_FILENAME)) {
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv",
    destfile = COUNTRY_TOP_10_FILENAME
  )
}
```

## Importing and Preparing Data

To begin the analysis, I prepared the Netflix data by importing the files, exploring their structure, and performing basic cleaning to ensure it was ready for insights.

```{r import}
# Importing libraries
if(!require("tidyverse")) install.packages("tidyverse")
library(readr)
library(dplyr)
library(stringr)
library(DT)
library(knitr)
library(lubridate)

# Read and Clean Data
format_titles <- function(df){
  colnames(df) <- str_replace_all(colnames(df), "_", " ") |> str_to_title()
  df
}

    # GLOBAL TOP 10
GLOBAL_TOP_10 <- read_tsv(GLOBAL_TOP_10_FILENAME, show_col_types = FALSE) |>
  mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))

    # COUNTRY TOP 10
COUNTRY_TOP_10 <- read_tsv(COUNTRY_TOP_10_FILENAME, show_col_types = FALSE) |>
  mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))
```

### Global Top 10 Dataset 
```{r GLobal Data}
GLOBAL_TOP_10 |> 
  mutate(`runtime_(minutes)` = round(60 * runtime)) |>
  select(-season_title, 
         -runtime) |>
  format_titles() |>
  head(n=10) |>
  datatable(options=list(searching=TRUE, info=FALSE)) |>
  formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

### Country-Wide Top 10 Dataset 
```{r Country Data}
COUNTRY_TOP_10 |> 
  select(-country_iso2, -season_title) |>
  format_titles() |>
  head(n=10) |>
  datatable(options=list(searching=TRUE, info=FALSE))
```


# Exploratory Questions

With the data ready, now it's time to explore key questions to understand Netflix’s performances.

## Global Reach

#### Question 1: How many different countries does Netflix operate in?

Netflix currently operates in **{{< contents countries_operated >}}**, with **{{< contents top_country >}}** leading in content, featuring **{{< contents top_country_titles >}}**.

```{r}
# Calculate total countries
countries_operated <- COUNTRY_TOP_10 |>
  summarise(num_countries = n_distinct(country_name)) |>
  pull(num_countries)

# Get comprehensive data for all countries
all_countries_data <- COUNTRY_TOP_10 |>
  group_by(country_name) |>
  summarise(
    unique_titles = n_distinct(show_title),
    unique_films = n_distinct(show_title[category == "Films"]),
    unique_tv = n_distinct(show_title[category == "TV"]),
    total_weeks = n(),
    avg_rank = round(mean(weekly_rank, na.rm = TRUE), 1),
    .groups = "drop"
  ) |>
  arrange(desc(unique_titles))

# Extract top country info
top_country <- all_countries_data |> slice(1) |> pull(country_name)
top_country_titles <- all_countries_data |> slice(1) |> pull(unique_titles)

# Display with datatable
all_countries_data |>
  datatable(
    options = list(searching = TRUE, info = FALSE),
    colnames = c("Country", "Unique Titles", "Films", "TV Shows", "Total Weeks", "Avg Rank")
  )
```
[`{r} countries_operated` countries]{#countries_operated}
[`{r} top_country`]{#top_country}
[`{r} top_country_titles` titles]{#top_country_titles}

## Non-English Hits

#### Question 2: Which non-English-language film has spent the most cumulative weeks in the global top 10?
```{r}
top_film <- GLOBAL_TOP_10 |>
  filter(category == "Films (Non-English)") |>
  slice_max(cumulative_weeks_in_top_10, n = 1, with_ties = FALSE) |>
  select(show_title, cumulative_weeks_in_top_10)

non_eng_top_film <- top_film |> pull(show_title)
non_eng_top_film_weeks <- top_film |> pull(cumulative_weeks_in_top_10)
```
The non-English-language film with the longest Global Top 10 run is **"`r non_eng_top_film`"**, which stayed for **`r non_eng_top_film_weeks` weeks**.

## Longest Film

#### Question 3: What is the longest film to have ever appeared in the Netflix global Top 10?
```{r}
longest_film_data <- GLOBAL_TOP_10 |>
  filter(category %in% c("Films (English)", "Films (Non-English)")) |>
  filter(!is.na(runtime)) |>
  mutate(runtime_minutes = round(60 * runtime)) |>
  slice_max(runtime_minutes, n = 1, with_ties = FALSE) |>
  select(show_title, runtime_minutes)

longest_film <- longest_film_data |> pull(show_title)
longest_film_min <- longest_film_data |> pull(runtime_minutes)
```
The longest film to appear in the Global Top 10 is **"`r longest_film`"**, running **`r longest_film_min` minutes**.

## Global Viewership Leaders

#### Question 4: For each of the four categories, what program has the most total hours of global viewership?
```{r}
top_viewership_data <- GLOBAL_TOP_10 |>
  group_by(category, show_title) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = "drop") |>
  group_by(category) |>
  slice_max(total_hours, n = 1, with_ties = FALSE) |>
  ungroup() |>
  mutate(hours_millions = round(total_hours / 1e6, 1)) |>
  arrange(desc(hours_millions))

# Create a summary table
kable(top_viewership_data |> 
        select(category, show_title, hours_millions),
      col.names = c("Category", "Show Title", "Total Hours Viewed (Millions)"),
      align = "l"
)
```

## Longest TV Run

#### Question 5: Which TV show had the longest run in a country's Top 10?
```{r}
longest_run <- COUNTRY_TOP_10 |>
  slice_max(cumulative_weeks_in_top_10, n = 1, with_ties = FALSE) |>
  select(country_name, show_title, cumulative_weeks_in_top_10)

longest_run_country <- longest_run |> pull(country_name)
longest_run_title <- longest_run |> pull(show_title)
longest_run_weeks <- longest_run |> pull(cumulative_weeks_in_top_10)
```

The TV show with the longest Top 10 run in a single country is **"`r longest_run_title`"** in **`r longest_run_country`**, lasting **`r longest_run_weeks` weeks**.

## Service History

#### Question 6: Which country did Netflix cease operations in that country?
```{r}
ceased_country <- COUNTRY_TOP_10 |>
  group_by(country_name) |>
  summarise(
    total_weeks = n_distinct(week),
    last_week = max(week)
  ) |>
  arrange(total_weeks) |>
  slice_head(n = 1)

ceased_country_name <- ceased_country |> pull(country_name)
ceased_country_date <- ceased_country |> pull(last_week)
```

Nearly every country has over 200 weeks of Netflix service history, except **`r ceased_country_name`**, where operations ended in **`r format(ceased_country_date, "%B %Y")`**.

## Squid Game Viewership

#### Question 7: What is the total viewership of the TV show Squid Game?
```{r}
title_7 <- "Squid Game"
total_view_show <- GLOBAL_TOP_10 |>
  filter(show_title == title_7) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) |>
  mutate(hours_millions = round(total_hours / 1e6, 1)) |>
  pull(hours_millions)
```
Globally, **`r title_7`** has accumulated **`r total_view_show` million hours** viewed across all seasons.

## Red Notice Viewership

#### Question 8: The movie Red Notice has a runtime of 1 hour and 58 minutes. Approximately how many views did it receive in 2021?

```{r}
title_8 <- "Red Notice"
rn_runtime <- 1 + 58 / 60

rn_data <- GLOBAL_TOP_10 |>
  filter(
    show_title == title_8,
    year(week) == 2021
  ) |>
  summarise(total_hours_viewed = sum(weekly_hours_viewed, na.rm = TRUE)) |>
  mutate(
    estimated_views = total_hours_viewed / rn_runtime,
    views_millions = round(estimated_views / 1e6, 1)
  )

rn_views <- rn_data |> pull(views_millions)
```

With a runtime of 1 hour and 58 minutes, **`r title_8`** received around **`r rn_views` million views** in 2021.

## Climbing the Charts

#### Question 9: How many Films reached Number 1 in the US but did not originally debut there? 

```{r}
# Find all films that debuted below #1 but hit #1
us_climbers <- COUNTRY_TOP_10 |>
  filter(country_name == "United States", category == "Films") |>
  group_by(show_title) |>
  mutate(
    debuted_rank = weekly_rank[which.min(week)],
    hit_number1 = any(weekly_rank == 1)
  ) |>
  summarise(
    debuted_rank = first(debuted_rank),
    hit_number1 = first(hit_number1),
    most_recent_week = max(week),
    .groups = "drop"
  ) |>
  filter(hit_number1, debuted_rank > 1)

# Count how many films did this
num_climbers <- nrow(us_climbers)

# Get the most recent film
most_recent_climber <- us_climbers |>
  slice_max(most_recent_week, n = 1, with_ties = FALSE)

recent_climber_title <- most_recent_climber |> pull(show_title)
recent_climber_debut <- most_recent_climber |> pull(debuted_rank)
```

Not every hit begins at the very top. **`r num_climbers` films** started below Number 1 in the U.S. charts and later achieved Number 1 status. The most recent example is **"`r recent_climber_title`"**, which began at **number `r recent_climber_debut`**.

## Global Debuts

#### Question 10: Which TV show/season hit the top 10 in the most countries in its debut week? In how many countries did it chart?

```{r}
tv_debut_weeks <- COUNTRY_TOP_10 |>
  filter(category == "TV") |>  # Try just "TV" if that's what your data has
  group_by(show_title) |>
  summarise(debut_week = min(week, na.rm = TRUE), .groups = "drop") |>
  filter(is.finite(debut_week))  # Remove any shows with no valid weeks

# Count countries in debut week for each show
tv_debut_countries <- COUNTRY_TOP_10 |>
  filter(category == "TV") |>
  inner_join(tv_debut_weeks, by = "show_title") |>
  filter(week == debut_week) |>
  group_by(show_title) |>
  summarise(num_countries = n_distinct(country_name), .groups = "drop") |>
  arrange(desc(num_countries)) |>
  slice_head(n = 1)

# Extract values for inline use
top_debut_show <- tv_debut_countries |> pull(show_title)
top_debut_countries <- tv_debut_countries |> pull(num_countries)
```

The TV show with the widest debut reach is **"`r top_debut_show`"**, which hit the Top 10 in **`r top_debut_countries` countries** in its first week.

\

# Press Releases

## Stranger Things Returns for Its Epic Finale

```{r}
# Total number of countries it charted in
st_countries <- COUNTRY_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  summarise(num_countries = n_distinct(country_name)) |>
  pull(num_countries)

# Total weeks in Top 10 globally
st_weeks <- GLOBAL_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  summarise(max_weeks = max(cumulative_weeks_in_top_10, na.rm = TRUE)) |>
  pull(max_weeks)

# Total viewership
st_views <- GLOBAL_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) |>
  mutate(hours_millions = round(total_hours / 1e6, 1)) |>
  pull(hours_millions)

# Get top 5 English TV shows for comparison
top_english_tv <- GLOBAL_TOP_10 |>
  filter(category == "TV (English)") |>
  group_by(show_title) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = "drop") |>
  mutate(hours_millions = round(total_hours / 1e6, 1)) |>
  arrange(desc(hours_millions)) |>
  slice_head(n = 5)

# Top 2 shows that aren't Stranger Things)
other_top_shows <- top_english_tv |>
  filter(show_title != "Stranger Things") |>
  slice_head(n = 2)

top_show_1 <- other_top_shows |>
  slice(1) |>
  pull(show_title)
top_show_2 <- other_top_shows |>
  slice(2) |>
  pull(show_title)
```

For nearly a decade, Stranger Things has defined a generation of streaming. With four unforgettable seasons behind it, the iconic series will return for one last chapter at the end of 2025.

Across its run, Stranger Things has reached audiences in **`r st_countries` countries**, spending over **`r st_weeks` weeks**  in the Global Top 10. Together, the four seasons have reached **`r st_views` million hours**, cementing its place among Netflix’s most-watched series. Compared to other English-language hits like **"`r top_show_1`"** and **"`r top_show_2 `"**, Stranger Things remains a standout favorite among viewers worldwide.

```{r}
#| fig-width: 8
#| fig-height: 5

library(ggplot2)

# Highlight Stranger Things
top_english_tv <- top_english_tv |>
  mutate(highlight = ifelse(show_title == "Stranger Things", "Stranger Things", "Other"))

ggplot(top_english_tv, aes(x = reorder(show_title, hours_millions), y = hours_millions, fill = highlight)) +
  geom_col(width = 0.5) +
  geom_text(aes(label = hours_millions), hjust = -0.2, size = 3.2) +
  coord_flip() +
  scale_fill_manual(values = c("Stranger Things" = "#E50914", "Other" = "#564d4d")) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(
    title = "Top 5 English-Language TV Shows",
    x = NULL,
    y = "Total Hours Viewed (Millions)"
  ) +
  theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(face = "bold", size = 16),
    axis.text.y = element_text(size = 12),
    axis.title.x = element_text(margin = margin(t = 15))
  )
```
```{r}
#| label: tbl-top-by-category
#| tbl-cap: "Top Program by Category"

stranger_things_data <- GLOBAL_TOP_10 |>
  filter(show_title == "Stranger Things", !is.na(season_title)) |>
  group_by(season_title) |>
  summarise(
    total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
    cumulative_weeks = max(cumulative_weeks_in_top_10, na.rm = TRUE),
    .groups = "drop"
  ) |>
  mutate(hours_millions = round(total_hours / 1e6, 1)) |>
  arrange(season_title) |>
  select(season_title, hours_millions, cumulative_weeks)

kable(stranger_things_data,
      col.names = c("Season", "Total Hours (Millions)", "Weeks in Top 10"),
      align = c("l", "r", "r"))
```

\

## The Commercial Success of Netflix in India

```{r}
# Extract the latest week in data
latest_week <- COUNTRY_TOP_10 |>
  filter(country_name == "India") |>
  summarise(latest = max(week)) |>
  pull(latest)

latest_week_formatted <- format(latest_week, "%B %d, %Y")

# Unique counts for films and series
india_films <- COUNTRY_TOP_10 |>
  filter(country_name == "India", category == "Films") |>
  distinct(show_title) |>
  nrow()

india_shows <- COUNTRY_TOP_10 |>
  filter(country_name == "India", category != "Films") |>
  distinct(show_title) |>
  nrow()
```

India, the world’s most populous country, has quickly become one of Netflix’s most dynamic markets. Since the launch of Netflix in India, audiences have embraced a wide range of local and global stories. As of **`r latest_week_formatted`**, a total of **`r india_films` films** and **`r india_shows` TV shows** have appeared in India’s Top 10 charts, highlighting the country’s growing influence on global streaming trends.

When it comes to films, Indian audiences continue to show strong loyalty to homegrown hits, with the country’s Top 10 largely dominated by Hindi-language titles, with "Red Notice" being the only exception, as shown in the chart below:

```{r}
#| tbl-cap: "Top 10 films in India"
#| 
# Top 10 films in India
india_top10_films <- COUNTRY_TOP_10 |>
  filter(country_name == "India", category == "Films") |>
  group_by(show_title) |>
  summarise(total_weeks = sum(cumulative_weeks_in_top_10, na.rm = TRUE), .groups = "drop") |>
  arrange(desc(total_weeks)) |>
  slice_head(n = 10)

kable(india_top10_films, col.names = c("Show Title", "Total Weeks in Top 10"), align = "l")
```
\

Indian viewers have also embraced locally produced TV shows, with **{{< contents india_count >}} programs** achieving remarkable popularity despite not charting in the U.S. The table below highlights standout titles such as The Great Indian Kapil Show, Mismatched, Kota Factory, and Khakee: The Bihar Chapter, showcasing the appeal of regional storytelling and the importance of Netflix’s investment in local productions.

```{r}
## Get programs in India's Top 10
india_programs <- COUNTRY_TOP_10 |>
  filter(country_name == "India") |>
  distinct(show_title) |>
  pull(show_title)

# Get programs in US Top 10
us_programs <- COUNTRY_TOP_10 |>
  filter(country_name == "United States") |>
  distinct(show_title) |>
  pull(show_title)

# Find programs in India but NOT in US
india_only_programs <- setdiff(india_programs, us_programs)

# Get detailed info with total weeks for India-only programs
india_only_top <- COUNTRY_TOP_10 |>
  filter(country_name == "India", show_title %in% india_only_programs) |>
  group_by(show_title, category) |>
  summarise(weeks_in_top10 = n(), .groups = "drop") |>
  arrange(desc(weeks_in_top10)) |>
  slice_head(n = 10)

# Store count for inline use
india_only_count <- length(india_only_programs)

library(knitr)
india_only_top |>
  select(Title = show_title, Category = category, `Weeks in India's Top 10` = weeks_in_top10) |>
  kable(align = c("l", "l", "c"))
```
[`r india_only_count`]{#india_count}

\

## South Korean Media is Taking Over the World

```{r}
# Top 3 TV shows globally (includes both English and Non-English)
top3_tv <- GLOBAL_TOP_10 |>
  filter(category %in% c("TV (English)", "TV (Non-English)")) |>
  group_by(show_title) |>
  summarise(total_views = sum(weekly_views, na.rm = TRUE), .groups = "drop") |>
  mutate(views_millions = round(total_views / 1e6, 1)) |>
  arrange(desc(views_millions)) |>
  slice_head(n = 3)

top_tv_1 <- top3_tv |>
  slice(1) |>
  pull(show_title)
top_tv_1_views <- top3_tv |>
  slice(1) |>
  pull(views_millions)

# Top 3 films globally (includes both English and Non-English)
top3_films <- GLOBAL_TOP_10 |>
  filter(category %in% c("Films (English)", "Films (Non-English)")) |>
  group_by(show_title) |>
  summarise(total_views = sum(weekly_views, na.rm = TRUE), .groups = "drop") |>
  mutate(views_millions = round(total_views / 1e6, 1)) |>
  arrange(desc(views_millions)) |>
  slice_head(n = 3)

top_film_1 <- top3_films |>
  slice(1) |>
  pull(show_title)
top_film_1_views <- top3_films |>
  slice(1) |>
  pull(views_millions)
```

South Korean media has taken the world by storm, with its shows and films dominating Netflix charts across continents. Once seen as niche, Korean productions have now become global sensations that shape pop culture and spark worldwide fandoms.

According to the data, **`r top_film_1`**  and **`r top_tv_1`** have claimed the number one spots globally for films and TV shows, respectively. 

```{r}
# Table for films
kable(top3_films |> select(show_title, views_millions),
  col.names = c("Film Title", "Total Views (Millions)"),
  align = "l",
  caption = "Top 3 Most Watched Films Globally"
)

# Table for TV shows
kable(top3_tv |> select(show_title, views_millions),
  col.names = c("TV Show Title", "Total Views (Millions)"),
  align = "l",
  caption = "Top 3 Most Watched TV Shows Globally"
)
```
\

Moreover, among the top global non-English TV shows on Netflix, 5 out of 10 are Korean dramas: **Squid Game, Alchemy of Souls, Extraordinary Attorney Woo, Hometown Cha-Cha-Cha**, and Queen of Tears, highlighting the enduring popularity of K-dramas and their ability to captivate audiences worldwide with compelling storytelling and strong production values.

```{r}
## Top 10 Non-English TV shows by cumulative weeks with hours
top10_nonenglish_weeks <- GLOBAL_TOP_10 |>
  filter(category == "TV (Non-English)") |>
  group_by(show_title) |>
  summarise(
    cumulative_weeks = max(cumulative_weeks_in_top_10),
    total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
    .groups = "drop"
  ) |>
  mutate(hours_millions = round(total_hours / 1e6, 1)) |>
  arrange(desc(cumulative_weeks)) |>
  slice_head(n = 10)

# Extract top show for inline use
top_nonenglish_weeks_show <- top10_nonenglish_weeks |>
  slice(1) |>
  pull(show_title)
top_nonenglish_weeks_count <- top10_nonenglish_weeks |>
  slice(1) |>
  pull(cumulative_weeks)
top_nonenglish_weeks_hours <- top10_nonenglish_weeks |>
  slice(1) |>
  pull(hours_millions)

# Table
kable(top10_nonenglish_weeks |> select(show_title, cumulative_weeks, hours_millions),
  col.names = c("TV Show Title", "Cumulative Weeks in Top 10", "Total Hours Viewed (Millions)"),
  align = c("l", "r", "r"),
  caption = "Top 10 Non-English TV Shows by Cumulative Weeks in Global Top 10"
)
```
\

From heartfelt storytelling to striking visuals, Korean creators have found the perfect recipe for stories that resonate everywhere. It’s clear that K-dramas aren’t just trending — they’ve become a powerful force shaping what the world loves to watch.

:::
